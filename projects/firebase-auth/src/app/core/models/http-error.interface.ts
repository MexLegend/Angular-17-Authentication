import { IFirebaseErrorCustomData } from "./firebase.interface";

export enum HTTP_ERROR_TYPES {
  ACCOUNT_NOT_VERIFIED = 'ACCOUNT_NOT_VERIFIED',
  BAD_REQUEST_ERROR = 'BAD_REQUEST_ERROR',
  EMAIL_ALREADY_REGISTERED = 'EMAIL_ALREADY_REGISTERED',
  EMAIL_NOT_VERIFIED = 'EMAIL_NOT_VERIFIED',
  EMAIL_INVALID = 'EMAIL_INVALID',
  CONFLICT = 'CONFLICT',
  FORBIDDEN = 'FORBIDDEN',
  NETWORK_ERROR = 'NETWORK_ERROR',
  NOT_FOUND = 'NOT_FOUND',
  PASSWORD_INVALID = 'PASSWORD_INVALID',
  PASSWORD_TOO_WEAK = 'PASSWORD_TOO_WEAK',
  SERVER_ERROR = 'SERVER_ERROR',
  TOKEN_EXPIRED = 'TOKEN_EXPIRED',
  TOKEN_REVOKED = 'TOKEN_REVOKED',
  TOO_MANY_REQUESTS = 'TOO_MANY_REQUESTS',
  UNAUTHORIZED = 'UNAUTHORIZED',
  WRONG_CREDENTIALS = 'WRONG_CREDENTIALS',
}

export enum FIREBASE_ERROR_TYPES {
  ACCOUNUT_ALREADY_REGISTERED = 'ACCOUNUT_ALREADY_REGISTERED',
  PROVIDER_ALREADY_REGISTERED = 'PROVIDER_ALREADY_REGISTERED',
  MAXIMUM_USER_COUNT = 'MAXIMUM_USER_COUNT',
  PHONE_ALREADY_REGISTERED = 'PHONE_ALREADY_REGISTERED',
}

export interface IHttpError<T = HTTP_ERROR_TYPES | FIREBASE_ERROR_TYPES> {
  readonly httpError: T;
  readonly httpStatus?: number;
  readonly message: string;
  readonly customData?: IFirebaseErrorCustomData;
}